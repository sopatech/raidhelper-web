name: PR Canary Build

# Build canary image for PR testing
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**'
      - '!.github/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-canary:
    name: Build PR Canary Images
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: read
      packages: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage --watchAll=false --passWithNoTests

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: |
          # Build with optimizations for faster builds
          export NEXT_TELEMETRY_DISABLED=1
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Build and push canary image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ci
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha,scope=pr
          cache-to: type=gha,mode=max,scope=pr
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Comment PR with canary image
        uses: actions/github-script@v7
        with:
          script: |
            const imageTag = `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}`;
            
            const comment = `## ðŸš€ Canary Image Built
            
            **Image:** \`${imageTag}\`
            
            This canary image has been built and pushed to GitHub Container Registry. You can use this image for testing your changes.
            
            **Usage:**
            \`\`\`bash
            docker pull ${imageTag}
            \`\`\`
            
            The image will be automatically cleaned up after 7 days.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
